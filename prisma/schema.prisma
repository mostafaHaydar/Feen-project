generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model Reporters {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Losts     Losts[]
  Founds    Founds[]

  Report Report[]
}

model Losts {
  id               Int      @id @default(autoincrement())
  name             String
  location         String
  lastSeenLocation String
  lastSeenDate     DateTime
  age              Int?
  gender           String
  contactInfo      String?
  disease          String?
  mentalHealth     String?
  photo            String?
  photoMimeType    String?
  found            Boolean  @default(false)
  confidence       Float    @default(0.0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Many-to-Many relation
  founds Founds[] @relation("LostsToFounds")

  reporterId Int
  Reporters  Reporters @relation(fields: [reporterId], references: [id])

  Match Match[]
}

model Founds {
  id            Int      @id @default(autoincrement())
  name          String?
  foundLocation String
  foundDate     DateTime
  description   String?
  age           Int?
  gender        String
  contactInfo   String?
  photo         String?
  photoMimeType String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Many-to-Many relation
  losts Losts[] @relation("LostsToFounds")

  reporterId Int
  Reporters  Reporters @relation(fields: [reporterId], references: [id])

  Match Match[]
}

model Statistic {
  id          Int      @id @default(autoincrement())
  type        String // e.g., 'visit', 'report_lost', 'report_found'
  count       Int      @default(0)
  lastUpdated DateTime @updatedAt
  createdAt   DateTime @default(now())
}

model Match {
  id         Int      @id @default(autoincrement())
  lostId     Int
  foundId    Int
  confidence Float?
  createdAt  DateTime @default(now())

  Losts  Losts  @relation(fields: [lostId], references: [id])
  Founds Founds @relation(fields: [foundId], references: [id])
}

model Report {
  id         Int      @id @default(autoincrement())
  type       String // e.g., 'lost', 'found'
  reportId   Int // foreign key for Losts or Founds
  createdAt  DateTime @default(now())
  reporterId Int

  Reporters Reporters @relation(fields: [reporterId], references: [id])

  @@index([type, reportId])
}
